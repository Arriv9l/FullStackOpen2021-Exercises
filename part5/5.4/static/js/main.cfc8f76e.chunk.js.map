{"version":3,"sources":["components/Blog.js","components/LoginInfo.js","components/Notification.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","LoginInfo","username","handleLogout","onClick","Notification","message","content","type","className","baseUrl","token","getHeader","headers","Authorization","getAll","a","axios","get","response","data","create","newBlog","post","setToken","newToken","login","payload","App","useState","blogs","setBlogs","setUsername","password","setPassword","user","setUser","setTitle","setAuthor","url","setUrl","setMessage","useEffect","loggedUserJSON","window","localStorage","getItem","JSON","parse","blogService","then","handleLogin","event","preventDefault","loginService","setItem","stringify","error","setTimeout","handleCreate","createdBlog","concat","onSubmit","value","onChange","target","removeItem","map","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cfc8f76e.chunk.js","sourcesContent":["import React from 'react'\n\nconst Blog = ({blog}) => (\n  <div>\n    {blog.title} {blog.author}\n  </div>\n)\n\nexport default Blog","import React from 'react'\n\nconst LoginInfo = ({ username, handleLogout }) => (\n  <div>\n    {username} logged in\n    <button onClick={handleLogout}>logout</button>\n  </div>\n)\n\nexport default LoginInfo","import React from 'react'\n\nconst Notification = ({ message }) => {\n  const { content, type } = message\n  if (!content)\n    return null\n\n  return (\n    <div className={type}>{content}</div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getHeader = () => {\n  return {\n    headers: { Authorization: token }\n  }\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl, getHeader())\n  return response.data\n}\n\nconst create = async (newBlog) => {\n  const response = await axios.post(baseUrl, newBlog, getHeader())\n  return response.data\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getAll, create, setToken }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (payload) => {\n  const response = await axios.post(baseUrl, payload)\n  return response.data\n}\n\nexport default login","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport LoginInfo from './components/LoginInfo'\nimport Notification from './components/Notification'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const [message, setMessage] = useState({})\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )\n  }, [user])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      setUser(user)\n    } catch (exception) {\n      setMessage({\n        content: exception.response.data.error,\n        type: 'error'\n      })\n    }\n\n    setUsername('')\n    setPassword('')\n    setTimeout(() => setMessage({}), 5000)\n  }\n\n  const handleLogout = () => {\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n    setUser(null)\n    blogService.setToken('')\n    window.localStorage.removeItem('loggedBlogappUser')\n  }\n\n  const handleCreate = async (event) => {\n    event.preventDefault()\n\n    try {\n      const createdBlog = await blogService.create({\n        title, author, url\n      })\n      setBlogs(blogs.concat(createdBlog))\n      setMessage({\n        content: `a new blog ${title} by ${user.username} added`,\n        type: 'info'\n      })\n    } catch (exception) {\n      setMessage({\n        content: exception.response.data.error,\n        type: 'error'\n      })\n    }\n\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n    setTimeout(() => setMessage({}), 5000)\n  }\n\n  const onNameChange = ({target}) => setUsername(target.value)\n  const onPasswordChange = ({target}) => setPassword(target.value)\n\n  const onTitleChange = ({target}) => setTitle(target.value)\n  const onAuthorChange = ({target}) => setAuthor(target.value)\n  const onUrlChange = ({target}) => setUrl(target.value)\n\n  if (user === null) {\n    return (\n      <div>\n        <h2>log in to application</h2>\n        <Notification message={message} />\n        <form onSubmit={handleLogin}>\n          <div>\n            username:\n            <input value={username} onChange={onNameChange} />\n          </div>\n          <div>\n            password:\n            <input value={password} onChange={onPasswordChange} />\n          </div>\n          <button type='submit'>login</button>\n        </form>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <Notification message={message} />\n      <LoginInfo\n        username={user.username}\n        handleLogout={handleLogout}\n      />\n      <br />\n      <h2>create new</h2>\n      <form onSubmit={handleCreate}>\n        <div>\n          title:\n          <input value={title} onChange={onTitleChange} />\n        </div>\n        <div>\n          author:\n          <input value={author} onChange={onAuthorChange} />\n        </div>\n        <div>\n          url:\n          <input value={url} onChange={onUrlChange} />\n        </div>\n        <button type='submit'>create</button>\n      </form>\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './style.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}