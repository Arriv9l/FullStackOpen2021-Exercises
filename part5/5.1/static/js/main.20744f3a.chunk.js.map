{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","token","getAll","a","axios","get","headers","Authorization","response","data","setToken","newToken","login","payload","post","App","useState","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","useEffect","blogService","then","handleLogin","event","preventDefault","loginService","onSubmit","value","onChange","target","type","map","id","ReactDOM","render","document","getElementById"],"mappings":"qMAQeA,EANF,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAF,OACX,gCACGA,EAAKC,MADR,IACgBD,EAAKE,W,gBCDnBC,EAAQ,KAkBG,GAAEC,OANL,uCAAG,4BAAAC,EAAA,sEACUC,IAAMC,IAff,aASP,CACLC,QAAS,CAAEC,cAAeN,KAIf,cACPO,EADO,yBAENA,EAASC,MAFH,2CAAH,qDAMaC,SAhBR,SAACC,GAChBV,EAAK,iBAAaU,KCELC,EALJ,uCAAG,WAAOC,GAAP,eAAAV,EAAA,sEACWC,IAAMU,KAHf,aAG6BD,GAD/B,cACNL,EADM,yBAELA,EAASC,MAFJ,2CAAH,sDC4DIM,EA1DH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEgBF,mBAAS,IAFzB,mBAETG,EAFS,KAECC,EAFD,OAGgBJ,mBAAS,IAHzB,mBAGTK,EAHS,KAGCC,EAHD,OAIQN,mBAAS,MAJjB,mBAITO,EAJS,KAIHC,EAJG,KAMhBC,qBAAU,WACRC,EAAYxB,SAASyB,MAAK,SAAAV,GAAK,OAC7BC,EAAUD,QAEX,CAACM,IAEJ,IAAMK,EAAW,uCAAG,WAAOC,GAAP,eAAA1B,EAAA,6DAClB0B,EAAMC,iBADY,SAGCC,EAAanB,MAAM,CACpCO,WAAUE,aAJM,OAGZE,EAHY,OAMlBG,EAAYhB,SAASa,EAAKtB,OAC1BuB,EAAQD,GACRH,EAAY,IACZE,EAAY,IATM,2CAAH,sDAejB,OAAa,OAATC,EAEA,gCACE,uDACA,uBAAMS,SAAUJ,EAAhB,UACE,2CAEE,uBAAOK,MAAOd,EAAUe,SAVb,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAF,OAAcf,EAAYe,EAAOF,aAY9C,2CAEE,uBAAOA,MAAOZ,EAAUa,SAbT,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAF,OAAcb,EAAYa,EAAOF,aAelD,wBAAQG,KAAK,SAAb,yBAON,gCACE,uCACA,gCAAMb,EAAKJ,SAAX,gBACA,uBACCF,EAAMoB,KAAI,SAAAvC,GAAI,OACb,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKwC,WCrDxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.20744f3a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Blog = ({blog}) => (\n  <div>\n    {blog.title} {blog.author}\n  </div>\n)\n\nexport default Blog","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getHeader = () => {\n  return {\n    headers: { Authorization: token }\n  }\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl, getHeader())\n  return response.data\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getAll, setToken }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (payload) => {\n  const response = await axios.post(baseUrl, payload)\n  return response.data\n}\n\nexport default login","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )\n  }, [user])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    const user = await loginService.login({\n      username, password\n    })\n    blogService.setToken(user.token)\n    setUser(user)\n    setUsername('')\n    setPassword('')\n  }\n\n  const onNameChange = ({target}) => setUsername(target.value)\n  const onPasswordChange = ({target}) => setPassword(target.value)\n\n  if (user === null) {\n    return (\n      <div>\n        <h2>log in to application</h2>\n        <form onSubmit={handleLogin}>\n          <div>\n            username\n            <input value={username} onChange={onNameChange} />\n          </div>\n          <div>\n            password\n            <input value={password} onChange={onPasswordChange} />\n          </div>\n          <button type='submit'>login</button>\n        </form>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <div>{user.username} logged in</div>\n      <br />\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}