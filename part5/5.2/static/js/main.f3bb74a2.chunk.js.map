{"version":3,"sources":["components/Blog.js","components/LoginInfo.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","LoginInfo","username","handleLogout","onClick","token","getAll","a","axios","get","headers","Authorization","response","data","setToken","newToken","login","payload","post","App","useState","blogs","setBlogs","setUsername","password","setPassword","user","setUser","useEffect","blogService","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","event","preventDefault","loginService","setItem","stringify","onSubmit","value","onChange","target","type","removeItem","map","id","ReactDOM","render","document","getElementById"],"mappings":"qMAQeA,EANF,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAF,OACX,gCACGA,EAAKC,MADR,IACgBD,EAAKE,WCKRC,EAPG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,aAAb,OAChB,gCACGD,EADH,aAEE,wBAAQE,QAASD,EAAjB,wB,gBCFAE,EAAQ,KAkBG,GAAEC,OANL,uCAAG,4BAAAC,EAAA,sEACUC,IAAMC,IAff,aASP,CACLC,QAAS,CAAEC,cAAeN,KAIf,cACPO,EADO,yBAENA,EAASC,MAFH,2CAAH,qDAMaC,SAhBR,SAACC,GAChBV,EAAK,iBAAaU,KCELC,EALJ,uCAAG,WAAOC,GAAP,eAAAV,EAAA,sEACWC,IAAMU,KAHf,aAG6BD,GAD/B,cACNL,EADM,yBAELA,EAASC,MAFJ,2CAAH,sDCkFIM,EA/EH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEgBF,mBAAS,IAFzB,mBAETlB,EAFS,KAECqB,EAFD,OAGgBH,mBAAS,IAHzB,mBAGTI,EAHS,KAGCC,EAHD,OAIQL,mBAAS,MAJjB,mBAITM,EAJS,KAIHC,EAJG,KAMhBC,qBAAU,WACRC,EAAYvB,SAASwB,MAAK,SAAAT,GAAK,OAC7BC,EAAUD,QAEX,CAACK,IAEJE,qBAAU,WACR,IAAMG,EAAiBC,OAAOC,aAAaC,QAAQ,qBACnD,GAAIH,EAAgB,CAClB,IAAML,EAAOS,KAAKC,MAAML,GACxBJ,EAAQD,GACRG,EAAYf,SAASY,EAAKrB,UAE3B,IAEH,IAAMgC,EAAW,uCAAG,WAAOC,GAAP,eAAA/B,EAAA,6DAClB+B,EAAMC,iBADY,SAGCC,EAAaxB,MAAM,CACpCd,WAAUsB,aAJM,OAGZE,EAHY,OAMlBM,OAAOC,aAAaQ,QAClB,oBAAqBN,KAAKO,UAAUhB,IAEtCG,EAAYf,SAASY,EAAKrB,OAC1BsB,EAAQD,GACRH,EAAY,IACZE,EAAY,IAZM,2CAAH,sDAwBjB,OAAa,OAATC,EAEA,gCACE,uDACA,uBAAMiB,SAAUN,EAAhB,UACE,2CAEE,uBAAOO,MAAO1C,EAAU2C,SAVb,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAF,OAAcvB,EAAYuB,EAAOF,aAY9C,2CAEE,uBAAOA,MAAOpB,EAAUqB,SAbT,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAF,OAAcrB,EAAYqB,EAAOF,aAelD,wBAAQG,KAAK,SAAb,yBAON,gCACE,uCACA,cAAC,EAAD,CACE7C,SAAUwB,EAAKxB,SACfC,aAjCe,WACnBwB,EAAQ,MACRE,EAAYf,SAAS,IACrBkB,OAAOC,aAAae,WAAW,wBAgC7B,uBACC3B,EAAM4B,KAAI,SAAAnD,GAAI,OACb,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKoD,WC3ExBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f3bb74a2.chunk.js","sourcesContent":["import React from 'react'\n\nconst Blog = ({blog}) => (\n  <div>\n    {blog.title} {blog.author}\n  </div>\n)\n\nexport default Blog","import React from 'react'\n\nconst LoginInfo = ({ username, handleLogout }) => (\n  <div>\n    {username} logged in\n    <button onClick={handleLogout}>logout</button>\n  </div>\n)\n\nexport default LoginInfo","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getHeader = () => {\n  return {\n    headers: { Authorization: token }\n  }\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl, getHeader())\n  return response.data\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getAll, setToken }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (payload) => {\n  const response = await axios.post(baseUrl, payload)\n  return response.data\n}\n\nexport default login","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport LoginInfo from './components/LoginInfo'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )\n  }, [user])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    const user = await loginService.login({\n      username, password\n    })\n    window.localStorage.setItem(\n      'loggedBlogappUser', JSON.stringify(user)\n    )\n    blogService.setToken(user.token)\n    setUser(user)\n    setUsername('')\n    setPassword('')\n  }\n\n  const handleLogout = () => {\n    setUser(null)\n    blogService.setToken('')\n    window.localStorage.removeItem('loggedBlogappUser')\n  }\n\n  const onNameChange = ({target}) => setUsername(target.value)\n  const onPasswordChange = ({target}) => setPassword(target.value)\n\n  if (user === null) {\n    return (\n      <div>\n        <h2>log in to application</h2>\n        <form onSubmit={handleLogin}>\n          <div>\n            username\n            <input value={username} onChange={onNameChange} />\n          </div>\n          <div>\n            password\n            <input value={password} onChange={onPasswordChange} />\n          </div>\n          <button type='submit'>login</button>\n        </form>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <LoginInfo\n        username={user.username}\n        handleLogout={handleLogout}\n      />\n      <br />\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}