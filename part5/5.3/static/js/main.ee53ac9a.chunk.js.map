{"version":3,"sources":["components/Blog.js","components/LoginInfo.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","LoginInfo","username","handleLogout","onClick","baseUrl","token","getHeader","headers","Authorization","getAll","a","axios","get","response","data","create","newBlog","post","setToken","newToken","login","payload","App","useState","blogs","setBlogs","setUsername","password","setPassword","user","setUser","setTitle","setAuthor","url","setUrl","useEffect","loggedUserJSON","window","localStorage","getItem","JSON","parse","blogService","then","handleLogin","event","preventDefault","loginService","setItem","stringify","handleCreate","createdBlog","concat","onSubmit","value","onChange","target","type","removeItem","map","id","ReactDOM","render","document","getElementById"],"mappings":"qMAQeA,EANF,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAF,OACX,gCACGA,EAAKC,MADR,IACgBD,EAAKE,WCKRC,EAPG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,aAAb,OAChB,gCACGD,EADH,aAEE,wBAAQE,QAASD,EAAjB,wB,gBCJEE,EAAU,aAEZC,EAAQ,KAMNC,EAAY,WAChB,MAAO,CACLC,QAAS,CAAEC,cAAeH,KAef,GAAEI,OAXL,uCAAG,4BAAAC,EAAA,sEACUC,IAAMC,IAAIR,EAASE,KAD7B,cACPO,EADO,yBAENA,EAASC,MAFH,2CAAH,qDAWaC,OANb,uCAAG,WAAOC,GAAP,eAAAN,EAAA,sEACUC,IAAMM,KAAKb,EAASY,EAASV,KADvC,cACPO,EADO,yBAENA,EAASC,MAFH,2CAAH,sDAMqBI,SArBhB,SAACC,GAChBd,EAAK,iBAAac,KCELC,EALJ,uCAAG,WAAOC,GAAP,eAAAX,EAAA,sEACWC,IAAMM,KAHf,aAG6BI,GAD/B,cACNR,EADM,yBAELA,EAASC,MAFJ,2CAAH,sDCsHIQ,EAnHH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEgBF,mBAAS,IAFzB,mBAETtB,EAFS,KAECyB,EAFD,OAGgBH,mBAAS,IAHzB,mBAGTI,EAHS,KAGCC,EAHD,OAIQL,mBAAS,MAJjB,mBAITM,EAJS,KAIHC,EAJG,OAMUP,mBAAS,IANnB,mBAMTzB,EANS,KAMFiC,EANE,OAOYR,mBAAS,IAPrB,mBAOTxB,EAPS,KAODiC,EAPC,OAQMT,mBAAS,IARf,mBAQTU,EARS,KAQJC,EARI,KAUhBC,qBAAU,WACR,IAAMC,EAAiBC,OAAOC,aAAaC,QAAQ,qBACnD,GAAIH,EAAgB,CAClB,IAAMP,EAAOW,KAAKC,MAAML,GACxBN,EAAQD,GACRa,EAAYxB,SAASW,EAAKxB,UAE3B,IAEH8B,qBAAU,WACRO,EAAYjC,SAASkC,MAAK,SAAAnB,GAAK,OAC7BC,EAAUD,QAEX,CAACK,IAEJ,IAAMe,EAAW,uCAAG,WAAOC,GAAP,eAAAnC,EAAA,6DAClBmC,EAAMC,iBADY,SAGCC,EAAa3B,MAAM,CACpCnB,WAAU0B,aAJM,OAGZE,EAHY,OAMlBQ,OAAOC,aAAaU,QAClB,oBAAqBR,KAAKS,UAAUpB,IAEtCa,EAAYxB,SAASW,EAAKxB,OAC1ByB,EAAQD,GACRH,EAAY,IACZE,EAAY,IAZM,2CAAH,sDAqBXsB,EAAY,uCAAG,WAAOL,GAAP,eAAAnC,EAAA,6DACnBmC,EAAMC,iBADa,SAGOJ,EAAY3B,OAAO,CAC3CjB,QAAOC,SAAQkC,QAJE,OAGbkB,EAHa,OAMnB1B,EAASD,EAAM4B,OAAOD,IACtBpB,EAAS,IACTC,EAAU,IACVE,EAAO,IATY,2CAAH,sDAmBlB,OAAa,OAATL,EAEA,gCACE,uDACA,uBAAMwB,SAAUT,EAAhB,UACE,4CAEE,uBAAOU,MAAOrD,EAAUsD,SAdb,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAF,OAAc9B,EAAY8B,EAAOF,aAgB9C,4CAEE,uBAAOA,MAAO3B,EAAU4B,SAjBT,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAF,OAAc5B,EAAY4B,EAAOF,aAmBlD,wBAAQG,KAAK,SAAb,yBAON,gCACE,uCACA,cAAC,EAAD,CACExD,SAAU4B,EAAK5B,SACfC,aAjDe,WACnB4B,EAAQ,MACRY,EAAYxB,SAAS,IACrBmB,OAAOC,aAAaoB,WAAW,wBAgD7B,uBACA,4CACA,uBAAML,SAAUH,EAAhB,UACE,yCAEE,uBAAOI,MAAOxD,EAAOyD,SAnCP,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAF,OAAczB,EAASyB,EAAOF,aAqC9C,0CAEE,uBAAOA,MAAOvD,EAAQwD,SAtCP,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAF,OAAcxB,EAAUwB,EAAOF,aAwChD,uCAEE,uBAAOA,MAAOrB,EAAKsB,SAzCP,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAF,OAActB,EAAOsB,EAAOF,aA2C1C,wBAAQG,KAAK,SAAb,uBAEDjC,EAAMmC,KAAI,SAAA9D,GAAI,OACb,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAK+D,WC/GxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ee53ac9a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Blog = ({blog}) => (\n  <div>\n    {blog.title} {blog.author}\n  </div>\n)\n\nexport default Blog","import React from 'react'\n\nconst LoginInfo = ({ username, handleLogout }) => (\n  <div>\n    {username} logged in\n    <button onClick={handleLogout}>logout</button>\n  </div>\n)\n\nexport default LoginInfo","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getHeader = () => {\n  return {\n    headers: { Authorization: token }\n  }\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl, getHeader())\n  return response.data\n}\n\nconst create = async (newBlog) => {\n  const response = await axios.post(baseUrl, newBlog, getHeader())\n  return response.data\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getAll, create, setToken }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (payload) => {\n  const response = await axios.post(baseUrl, payload)\n  return response.data\n}\n\nexport default login","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport LoginInfo from './components/LoginInfo'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )\n  }, [user])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    const user = await loginService.login({\n      username, password\n    })\n    window.localStorage.setItem(\n      'loggedBlogappUser', JSON.stringify(user)\n    )\n    blogService.setToken(user.token)\n    setUser(user)\n    setUsername('')\n    setPassword('')\n  }\n\n  const handleLogout = () => {\n    setUser(null)\n    blogService.setToken('')\n    window.localStorage.removeItem('loggedBlogappUser')\n  }\n\n  const handleCreate = async (event) => {\n    event.preventDefault()\n\n    const createdBlog = await blogService.create({\n      title, author, url\n    })\n    setBlogs(blogs.concat(createdBlog))\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n\n  const onNameChange = ({target}) => setUsername(target.value)\n  const onPasswordChange = ({target}) => setPassword(target.value)\n\n  const onTitleChange = ({target}) => setTitle(target.value)\n  const onAuthorChange = ({target}) => setAuthor(target.value)\n  const onUrlChange = ({target}) => setUrl(target.value)\n\n  if (user === null) {\n    return (\n      <div>\n        <h2>log in to application</h2>\n        <form onSubmit={handleLogin}>\n          <div>\n            username: \n            <input value={username} onChange={onNameChange} />\n          </div>\n          <div>\n            password: \n            <input value={password} onChange={onPasswordChange} />\n          </div>\n          <button type='submit'>login</button>\n        </form>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <LoginInfo\n        username={user.username}\n        handleLogout={handleLogout}\n      />\n      <br />\n      <h2>create new</h2>\n      <form onSubmit={handleCreate}>\n        <div>\n          title: \n          <input value={title} onChange={onTitleChange} />\n        </div>\n        <div>\n          author: \n          <input value={author} onChange={onAuthorChange} />\n        </div>\n        <div>\n          url: \n          <input value={url} onChange={onUrlChange} />\n        </div>\n        <button type='submit'>create</button>\n      </form>\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}